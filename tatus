[1mdiff --git a/.cgi-germany.gitlab-ci.yml b/.cgi-germany.gitlab-ci.yml[m
[1mindex 790d55f8..3d6f9cbf 100644[m
[1m--- a/.cgi-germany.gitlab-ci.yml[m
[1m+++ b/.cgi-germany.gitlab-ci.yml[m
[36m@@ -51,14 +51,15 @@[m [mpackage:[m
     - mv geoserver/src/web/app/target/geoserver.war docker/resources/geoserver/geoserver.war[m
     - cp -v -r datadir/* docker/resources/geoserver-datadir/[m
     - apk add wget[m
[31m-    - wget -O docker/resources/fonts/osm-fonts.tar.xz https://www.dropbox.com/s/ges2v64on30katy/osm-fonts.tar.xz[m
     - chmod +x docker/resources/geoserver-datadir/importer/scripts/*.sh[m
     - cd docker[m
[32m+[m[32m    - ls ./*[m
[32m+[m[32m    - ls ./resources/*[m
     - docker build --no-cache[m
       --build-arg "GEOSERVER_HOME=${GEOSERVER_HOME}"[m
[31m-      --build-arg "GEOSERVER_WEBAPP_SRC="docker/resources/geoserver/geoserver.war.zip"[m
[31m-      --build-arg "GEOSERVER_DATA_DIR_SRC="datadir/"[m
[31m-      --build-arg "CUSTOM_FONTS=docker/resources/fonts/*"[m
[32m+[m[32m      --build-arg "GEOSERVER_WEBAPP_SRC="./resources/geoserver/geoserver.war"[m
[32m+[m[32m      --build-arg "GEOSERVER_DATA_DIR_SRC="./resources/geoserver-datadir/*"[m
[32m+[m[32m      --build-arg "CUSTOM_FONTS=./resources/fonts"[m
       --build-arg "APP_LOCATION=${APP_LOCATION}"[m
       --build-arg "GEOSERVER_LOG_LOCATION=${GEOSERVER_LOG_LOCATION}"[m
       --build-arg "GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}"[m
[1mdiff --git a/docker/Dockerfile b/docker/Dockerfile[m
[1mindex 6e480588..d214ccc5 100644[m
[1m--- a/docker/Dockerfile[m
[1m+++ b/docker/Dockerfile[m
[36m@@ -6,7 +6,6 @@[m [mSHELL ["/bin/bash", "-c"][m
 ARG DEBIAN_FRONTEND=noninteractive[m
 ARG CMAKE_BUILD_PARALLEL_LEVEL=8[m
 ARG APP_LOCATION="geoserver"[m
[31m-RUN apt-get update && apt-get install -y unzip wget[m
 RUN apt-get update && apt-get install -y unzip wget cmake nasm\[m
     && wget https://sourceforge.net/projects/libjpeg-turbo/files/2.1.5.1/libjpeg-turbo-2.1.5.1.tar.gz \[m
     && tar -zxf ./libjpeg-turbo-2.1.5.1.tar.gz \[m
[36m@@ -15,45 +14,40 @@[m [mRUN apt-get update && apt-get install -y unzip wget cmake nasm\[m
     && dpkg -i ./libjpeg*.deb && apt-get -f install[m
 [m
 # accepts local files and URLs. Tar(s) are automatically extracted[m
[31m-WORKDIR /output/datadir[m
[31m-ARG GEOSERVER_DATA_DIR_SRC="./.placeholder"[m
[31m-ADD "${GEOSERVER_DATA_DIR_SRC}" "./"[m
[32m+[m[32m#WORKDIR /output/datadir[m
[32m+[m[32m#RUN ls -l[m
[32m+[m[32m#ARG GEOSERVER_DATA_DIR_SRC="./.placeholder"[m
[32m+[m[32m#ADD "${GEOSERVER_DATA_DIR_SRC}" "./"[m
 [m
 # accepts local files and URLs. Tar(s) are automatically extracted[m
[31m-WORKDIR /output/webapp[m
[31m-ARG GEOSERVER_WEBAPP_SRC="./.placeholder"[m
[31m-ADD "${GEOSERVER_WEBAPP_SRC}" "./"[m
[32m+[m[32m#WORKDIR /output/webapp[m
[32m+[m[32m#ARG GEOSERVER_WEBAPP_SRC="./.placeholder"[m
[32m+[m[32m#ADD "${GEOSERVER_WEBAPP_SRC}" "./"[m
 [m
 # zip files require explicit extracion[m
[31m-RUN \[m
[31m-    if [ -f "./download" ] ; then \[m
[31m-      mv download geoserver.war.zip && unzip geoserver.war.zip -d geoserver.war && mkdir -p ./geoserver && unzip ./geoserver.war/geoserver.war -d ./geoserver && rm -rf ./geoserver.war;\[m
[31m-    fi[m
[31m-[m
[31m-# zip files require explicit extracion[m
[31m-RUN \[m
[31m-    if [ "${GEOSERVER_WEBAPP_SRC##*.}" = "zip" ]; then \[m
[31m-        unzip "./*zip"; \[m
[31m-        rm ./*zip; \[m
[31m-    fi \[m
[31m-    && [ -d "./geoserver" ] || (mkdir -p ./geoserver && unzip ./geoserver.war -d ./geoserver && rm ./geoserver.war)[m
[31m-[m
[31m-WORKDIR /output/plugins[m
[32m+[m[32m#RUN \[m
[32m+[m[32m#    if [ "${GEOSERVER_WEBAPP_SRC##*.}" = "zip" ]; then \[m
[32m+[m[32m#        unzip "./*zip"; \[m
[32m+[m[32m#        rm ./*zip; \[m
[32m+[m[32m#    fi \[m
[32m+[m[32m#    && [ -d "./geoserver" ] || (mkdir -p ./geoserver && unzip ./geoserver.war -d ./geoserver && rm ./geoserver.war)[m
[32m+[m
[32m+[m[32m#WORKDIR /output/plugins[m
 #ARG PLUG_IN_URLS=""[m
 #ARG PLUG_IN_PATHS=""[m
 #ADD .placeholder ${PLUG_IN_PATHS} /output/plugins/[m
 #COPY geoserver-plugin-download.sh /usr/local/bin/geoserver-plugin-download.sh[m
 #RUN /usr/local/bin/geoserver-plugin-download.sh /output/plugins/ ${PLUG_IN_URLS}[m
[31m-RUN \[m
[31m-    if [ -f *.zip ] ; then \[m
[31m-       unzip -o "./*.zip"; \[m
[31m-    fi[m
[32m+[m[32m#RUN \[m
[32m+[m[32m#    if [ -f *.zip ] ; then \[m
[32m+[m[32m#       unzip -o "./*.zip"; \[m
[32m+[m[32m#    fi[m
 [m
[31m-WORKDIR /output/webapp[m
[31m-RUN \[m
[31m-    if [ "${APP_LOCATION}" != "geoserver" ]; then \[m
[31m-      mv /output/webapp/geoserver /output/webapp/${APP_LOCATION}; \[m
[31m-    fi[m
[32m+[m[32m#WORKDIR /output/webapp[m
[32m+[m[32m#RUN \[m
[32m+[m[32m#    if [ "${APP_LOCATION}" != "geoserver" ]; then \[m
[32m+[m[32m#      mv /output/webapp/geoserver /output/webapp/${APP_LOCATION}; \[m
[32m+[m[32m#    fi[m
 [m
 FROM tomcat:9-jdk11-openjdk[m
 [m
[36m@@ -73,6 +67,7 @@[m [mENV GEOSERVER_LOG_LOCATION="${GEOSERVER_LOG_DIR}/${DOCKER_HOST}-${MASTER_SLAVE}-[m
 ENV GEOWEBCACHE_CONFIG_DIR="${GEOSERVER_HOME}/gwc_cache_dir"[m
 ENV GEOSERVER_AUDIT_PATH="${GEOSERVER_HOME}/audits/geoserver-${DOCKER_HOST}-${MASTER_SLAVE}-${HOSTNAME}"[m
 ENV GEOWEBCACHE_CACHE_DIR="${GEOSERVER_HOME}/gwc_cache_dir"[m
[32m+[m[32mENV FONTS_DIR=${JAVA_HOME}/lib/fonts[m
 # override at run time as needed JAVA_OPTS[m
 ENV INITIAL_MEMORY="2G"[m
 ENV MAXIMUM_MEMORY="4G"[m
[36m@@ -117,6 +112,28 @@[m [mRUN mkdir -p \[m
     "${GEOSERVER_LOG_DIR}"  \[m
     "${GEOWEBCACHE_CONFIG_DIR}" \[m
     "${GEOWEBCACHE_CACHE_DIR}"[m
[32m+[m
[32m+[m[32m# copy from mother[m
[32m+[m[32mCOPY --from=mother "/opt/libjpeg-turbo-geoserver" "/opt/libjpeg-turbo-geoserver"[m
[32m+[m[32m#COPY --from=mother "/output/datadir" "${GEOSERVER_DATA_DIR}"[m
[32m+[m[32m#COPY --from=mother "/output/webapp/geoserver" "${CATALINA_BASE}/webapps/geoserver"[m
[32m+[m[32m#COPY --from=mother "/output/plugins" "${CATALINA_BASE}/webapps/geoserver/WEB-INF/lib"[m
[32m+[m[32mCOPY "./resources/geoserver-datadir" "${GEOSERVER_DATA_DIR}"[m
[32m+[m[32mRUN mkdir "$CATALINA_BASE/webapps/geoserver"[m
[32m+[m[32mWORKDIR "$CATALINA_BASE/webapps/geoserver"[m
[32m+[m[32mCOPY "./resources/geoserver/geoserver.war" "./"[m
[32m+[m[32mRUN unzip ./geoserver.war[m[41m [m
[32m+[m[32mRUN rm -f geoserver.war[m
[32m+[m[32m#RUN \[m
[32m+[m[32m#    if [ "${APP_LOCATION}" != "geoserver" ]; then \[m
[32m+[m[32m#      mv ${CATALINA_BASE}/webapps/geoserver.war ${CATALINA_BASE}/webapps/${APP_LOCATION}.war; \[m
[32m+[m[32m#    fi[m
[32m+[m[32mRUN echo `ls -l "${CATALINA_BASE}/webapps"`[m
[32m+[m
[32m+[m[32m#COPY geoserver-plugin-download.sh /usr/local/bin/geoserver-plugin-download.sh[m
[32m+[m[32mRUN mkdir ${JAVA_HOME}/lib/fonts[m
[32m+[m[32mADD ${CUSTOM_FONTS} ${FONTS_DIR}[m
[32m+[m
 RUN apt-get update[m
 RUN apt-get install --yes git vim gdal-bin postgresql-client fontconfig libfreetype6 jq[m
 RUN apt-get clean \[m
[36m@@ -126,27 +143,19 @@[m [mRUN apt-get clean \[m
     && rm -rf /usr/share/man/* \[m
     && rm -rf /usr/share/doc/*[m
 [m
[31m-# copy from mother[m
[31m-COPY --from=mother "/opt/libjpeg-turbo-geoserver" "/opt/libjpeg-turbo-geoserver"[m
[31m-COPY --from=mother "/output/datadir" "${GEOSERVER_DATA_DIR}"[m
[31m-COPY --from=mother "/output/webapp/geoserver" "${CATALINA_BASE}/webapps/geoserver"[m
[31m-#COPY --from=mother "/output/plugins" "${CATALINA_BASE}/webapps/geoserver/WEB-INF/lib"[m
[31m-[m
[31m-#COPY geoserver-plugin-download.sh /usr/local/bin/geoserver-plugin-download.sh[m
 COPY geoserver-rest-config.sh /usr/local/bin/geoserver-rest-config.sh[m
 COPY geoserver-rest-reload.sh /usr/local/bin/geoserver-rest-reload.sh[m
[31m-COPY entrypoint.sh /entrypoint.sh[m
[31m-RUN mkdir ${JAVA_HOME}/lib/fonts[m
[31m-ADD ${CUSTOM_FONTS} ${JAVA_HOME}/lib/fonts[m
[32m+[m
 RUN groupadd -g $GID $UNAME[m
 RUN useradd -m -u $UID -g $GID --system $UNAME[m
 RUN chown -R $UID:$GID $GEOSERVER_LOG_DIR $CATALINA_BASE $GEOWEBCACHE_CACHE_DIR $GEOWEBCACHE_CONFIG_DIR $GEOSERVER_DATA_DIR[m
 [m
[31m-RUN if [ ! -f "${GEOSERVER_DATA_DIR}/logging.xml" ]; then cp -a ${CATALINA_BASE}/webapps/geoserver/data/* ${GEOSERVER_DATA_DIR};fi[m
[31m-[m
 WORKDIR "$CATALINA_BASE"[m
[32m+[m[32mCOPY entrypoint.sh ${CATALINA_BASE}/entrypoint.sh[m
[32m+[m[32mRUN chown $UID:$GID ${CATALINA_BASE}/entrypoint.sh && chmod +x ${CATALINA_BASE}/entrypoint.sh[m
[32m+[m
 USER $UNAME[m
 [m
 ENV TERM xterm[m
 EXPOSE 8080/tcp[m
[31m-CMD ["/entrypoint.sh"][m
[32m+[m[32mCMD ["/usr/local/tomcat/entrypoint.sh"][m
