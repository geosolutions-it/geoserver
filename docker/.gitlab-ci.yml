# To configure each environment, prefix the variables keys with the environment name
# <CI_ENVIRONMENT_NAME>_DATADIR_MOUNT
# <CI_ENVIRONMENT_NAME>_KUBE_NAMESPACE

variables:
  BASE_IMAGE_NAME: "gs-base"
  BASE_IMAGE_TAG: "7.0-jre8"
  CI_ENVIRONMENT_NAME: "geosolutions"
  TAG_NAME: "2.16.x-eows_${CI_PIPELINE_ID}"
  TAG_LATEST: "gs-latest"
  GEOSERVER_APP_NAME: "geoserver"
  INCLUDE_DATA_DIR: "true"
  GEOSERVER_HOME: "/var/geoserver"
  GEOSERVER_DATA_DIR: "${GEOSERVER_HOME}/datadir"
  GEOSERVER_LOG_LOCATION: "${GEOSERVER_HOME}/logs/$${DOCKER_HOST}-$${MASTER_SLAVE}-$${HOSTNAME}.log"
  GEOWEBCACHE_CONFIG_DIR: "${GEOSERVER_DATA_DIR}/gwc"
  GEOWEBCACHE_CACHE_DIR: "${GEOSERVER_HOME}/gwc_cache_dir"
  GEOSERVER_AUDIT_PATH: "${GEOSERVER_HOME}/audits/geoserver-$${DOCKER_HOST}-$${MASTER_SLAVE}-$${HOSTNAME}"
  JAI_EXT_ENABLED: "true"
  JAVA_OPTS: "-Xms1024m -Xmx1024m -XX:+UseParallelGC -XX:+UseParallelOldGC -DGEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR} -DGEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR} -DGEOWEBCACHE_CONFIG_DIR=${GEOWEBCACHE_CONFIG_DIR} -DGEOSERVER_LOG_LOCATION=${GEOSERVER_LOG_LOCATION} -DGEOSERVER_AUDIT_PATH=${GEOSERVER_AUDIT_PATH} -DPROXY_BASE_URL=$${PROXY_BASE_URL} -DGEOSERVER_NODE_OPTS=id:$${MASTER_SLAVE} -Dorg.geotools.coverage.jaiext.enabled=${JAI_EXT_ENABLED}"
  TOMCAT_EXTRAS: "false"
  INCLUDE_GS_WAR: "true"
  INCLUDE_PLUGINS: "false"
  ADD_EXTRA_FONTS: "true"
  DOCKERFILE: "./Dockerfile"

.build_template: &build_definition
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "${REGISTRY_USER-$CI_REGISTRY_USER}" -p "${REGISTRY_PASSWORD-$CI_REGISTRY_PASSWORD}" ${REGISTRY_URL-$CI_REGISTRY}
  script:
    - wget --no-check-certificate -O ./resources/geoserver/geoserver.war https://${FTP_USER}:${FTP_PASSWORD}@demo.geo-solutions.it/share/eumetsat/wars/geoserver_latest.war
    - wget --no-check-certificate -O ./resources/fonts/osm-fonts.tar.xz https://${FTP_USER}:${FTP_PASSWORD}@demo.geo-solutions.it/share/eumetsat/fonts/osm-fonts.tar.xz
    - mkdir -p /tmp/geoserver-mount
    - apk update ; apk add nfs-utils
    - eval "export DATADIR_MOUNT=\$${CI_ENVIRONMENT_NAME}_DATADIR_MOUNT"
    - mount -t nfs4 -v -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport ${DATADIR_MOUNT}:/ /tmp/geoserver-mount
    - cp -v -r /tmp/geoserver-mount/geoserver/datadir/* ./resources/geoserver-datadir/
    - chmod +x ./resources/geoserver-datadir/importer/scripts/*.sh
    - docker build --pull --no-cache
      --build-arg "BASE_IMAGE_NAME=${BASE_IMAGE_NAME}"
      --build-arg "BASE_IMAGE_TAG=${BASE_IMAGE_TAG}"
      --build-arg "INCLUDE_DATA_DIR=${INCLUDE_DATA_DIR}"
      --build-arg "INCLUDE_GS_WAR=${INCLUDE_GS_WAR}"
      --build-arg "INCLUDE_PLUGINS=${INCLUDE_PLUGINS}"
      --build-arg "GEOSERVER_HOME=${GEOSERVER_HOME}"
      --build-arg "GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}"
      --build-arg "GEOSERVER_APP_NAME=${GEOSERVER_APP_NAME}"
      --build-arg "GEOSERVER_LOG_LOCATION=${GEOSERVER_LOG_LOCATION}"
      --build-arg "GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}"
      --build-arg "GEOWEBCACHE_CONFIG_DIR=${GEOWEBCACHE_CONFIG_DIR}"
      --build-arg "GEOSERVER_AUDIT_PATH=${GEOSERVER_AUDIT_PATH}"
      --build-arg "JAVA_OPTS=${JAVA_OPTS}"
      --build-arg "TOMCAT_EXTRAS=${TOMCAT_EXTRAS}"
      --build-arg "ADD_EXTRA_FONTS=${ADD_EXTRA_FONTS}"
      -t "${REGISTRY_IMAGE-$CI_REGISTRY_IMAGE}:${TAG_NAME}"
      -t "${REGISTRY_IMAGE-$CI_REGISTRY_IMAGE}:${TAG_LATEST}"
      -f "${DOCKERFILE}" .
    - docker push ${REGISTRY_IMAGE-$CI_REGISTRY_IMAGE}:${TAG_NAME}
    - docker push ${REGISTRY_IMAGE-$CI_REGISTRY_IMAGE}:${TAG_LATEST}

build:
  <<: *build_definition
  environment:
    name: dev
  when: manual
  only:
  - master
  - merge_requests
  - web

.deploy_template: &deploy_definition
  stage: deploy
  image: kroniak/ssh-client
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H 54.93.154.227 >> ~/.ssh/known_hosts
  script:
    - eval "export KUBE_NAMESPACE=\$${CI_ENVIRONMENT_NAME}_KUBE_NAMESPACE"
    - ssh geosolutions@54.93.154.227 "kubectl -n ${KUBE_NAMESPACE} rollout restart statefulset/wms-geoserver-slave-set"
    - ssh geosolutions@54.93.154.227 "kubectl -n ${KUBE_NAMESPACE} rollout restart statefulset/wms-geoserver-master-set"

deploy-dev:
  <<: *deploy_definition
  environment:
    name: dev
  when: manual
  only:
  - master
  - merge_requests
  - web

deploy-geosolutions:
  <<: *deploy_definition
  environment:
    name: geosolutions
  when: manual
  only:
  - master
  - merge_requests
  - web
