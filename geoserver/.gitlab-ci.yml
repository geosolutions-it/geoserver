# Build a custom GeoServer WAR package

# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -Dproject.build.sourceEncoding=UTF-8 -Dproject.reporting.outputEncoding=UTF-8 -Djava.awt.headless=true -Dtest.maxHeapSize=512M -B -U -T2 -DskipTests=true"
  MAVEN_ACTIVE_PROFILES: "-Pauthkey -Pcontrol-flow -Pcss -Pfeature-pregeneralized -Pimporter -Plibjpeg-turbo -Pmonitor -Pnetcdf -Pnetcdf-out -Pwps -Pimporter-jdbc -Pncwms -Pghrsst -Pwmts-multi-dimensional -Pwps-download -Pwps-jdbc -Pgrib"

# This template uses jdk8 for verifying and deploying images
image: maven:3.6.3-jdk-8

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

build: 
  stage: build
  script:
    - cd src
    - mvn $MAVEN_CLI_OPTS $MAVEN_ACTIVE_PROFILES -am clean install
    - cd web/app
    - mvn $MAVEN_CLI_OPTS $MAVEN_ACTIVE_PROFILES -am clean install
    - curl -T target/geoserver.war ftp://${FTP_UPLOAD_LOCATION}/geoserver_latest.war --user ${FTP_USER}:${FTP_PASSWORD}
  artifacts:
    paths:
    - src/web/app/target/geoserver.war
    expire_in: 1 week
